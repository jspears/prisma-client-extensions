interface ScalarType {
  String: string;
  Int: number;
  BigInt: bigint;
  Boolean: boolean;
  DateTime: Date;
}

interface ScalarFilterType {
  String: StringFilter;
  Int: IntFilter;
  BigInt: BigIntFilter;
  Boolean: BoolFilter;
  DateTime: DateTimeFilter;
}

export declare const QueryMode: {
  default: "default";
  insensitive: "insensitive";
};

export type QueryMode = typeof QueryMode[keyof typeof QueryMode];

export type DateTimeFilter = {
  equals?: Date | string;
  in?: Enumerable<Date> | Enumerable<string>;
  notIn?: Enumerable<Date> | Enumerable<string>;
  lt?: Date | string;
  lte?: Date | string;
  gt?: Date | string;
  gte?: Date | string;
  not?: NestedDateTimeFilter | Date | string;
};

export type NestedDateTimeFilter = {
  equals?: Date | string;
  in?: Enumerable<Date> | Enumerable<string>;
  notIn?: Enumerable<Date> | Enumerable<string>;
  lt?: Date | string;
  lte?: Date | string;
  gt?: Date | string;
  gte?: Date | string;
  not?: NestedDateTimeFilter | Date | string;
};

export type UuidFilter = {
  equals?: string;
  in?: Enumerable<string>;
  notIn?: Enumerable<string>;
  lt?: string;
  lte?: string;
  gt?: string;
  gte?: string;
  mode?: QueryMode;
  not?: NestedUuidFilter | string;
};

export type NestedUuidFilter = {
  equals?: string;
  in?: Enumerable<string>;
  notIn?: Enumerable<string>;
  lt?: string;
  lte?: string;
  gt?: string;
  gte?: string;
  not?: NestedUuidFilter | string;
};

export type StringFilter = {
  equals?: string;
  in?: Enumerable<string>;
  notIn?: Enumerable<string>;
  lt?: string;
  lte?: string;
  gt?: string;
  gte?: string;
  contains?: string;
  startsWith?: string;
  endsWith?: string;
  mode?: QueryMode;
  not?: NestedStringFilter | string;
};

export type NestedStringFilter = {
  equals?: string;
  in?: Enumerable<string>;
  notIn?: Enumerable<string>;
  lt?: string;
  lte?: string;
  gt?: string;
  gte?: string;
  contains?: string;
  startsWith?: string;
  endsWith?: string;
  not?: NestedStringFilter | string;
};

export type IntFilter = {
  equals?: number;
  in?: Enumerable<number>;
  notIn?: Enumerable<number>;
  lt?: number;
  lte?: number;
  gt?: number;
  gte?: number;
  not?: NestedIntFilter | number;
};

export type NestedIntFilter = {
  equals?: number;
  in?: Enumerable<number>;
  notIn?: Enumerable<number>;
  lt?: number;
  lte?: number;
  gt?: number;
  gte?: number;
  not?: NestedIntFilter | number;
};

export type BoolFilter = {
  equals?: boolean;
  not?: NestedBoolFilter | boolean;
};

export type NestedBoolFilter = {
  equals?: boolean;
  not?: NestedBoolFilter | boolean;
};

export type BigIntFilter = {
  equals?: bigint | number;
  in?: Enumerable<bigint> | Enumerable<number>;
  notIn?: Enumerable<bigint> | Enumerable<number>;
  lt?: bigint | number;
  lte?: bigint | number;
  gt?: bigint | number;
  gte?: bigint | number;
  not?: NestedBigIntFilter | bigint | number;
};

export type NestedBigIntFilter = {
  equals?: bigint | number;
  in?: Enumerable<bigint> | Enumerable<number>;
  notIn?: Enumerable<bigint> | Enumerable<number>;
  lt?: bigint | number;
  lte?: bigint | number;
  gt?: bigint | number;
  gte?: bigint | number;
  not?: NestedBigIntFilter | bigint | number;
};

type Enumerable<T> = T | Array<T>;

type Enum = {
  [E in DMMFEnum as E["name"]]: E["values"][number]["name"];
};

type Model = {
  [M in DMMFModel as M["name"]]: {
    [F in DMMFGetScalarFields<M> as F["name"]]: DMMFGetScalarFieldType<F>;
  };
};

type ModelSelectScalar = {
  [M in DMMFModel as M["name"]]: {
    [F in DMMFGetScalarFields<M> as F["name"]]?: boolean;
  };
};

type ModelSelect = {
  [M in DMMFModel as M["name"]]: {
    [F in DMMFGetObjectFields<M> as F["name"]]?: boolean | ModelArgs[F["type"]];
  } & ModelSelectScalar[M["name"]];
};

type ModelInclude = {
  [M in DMMFModel as M["name"]]: {
    [F in DMMFGetObjectFields<M> as F["name"]]?: boolean | ModelArgs[F["type"]];
  };
};

type ModelFindUniqueArgs = {
  [M in DMMFModel as M["name"]]: {
    select?: ModelSelect[M["name"]] | null;
    include?: ModelInclude[M["name"]] | null;
  };
};

type ModelFindManyArgs = {
  [M in DMMFModel as M["name"]]: {
    select?: ModelSelect[M["name"]] | null;
    include?: ModelInclude[M["name"]] | null;
    take?: number;
    skip?: number;
  };
};

type ModelArgs = {
  [M in DMMFModel as M["name"]]: {
    select?: ModelSelect[M["name"]] | null;
    include?: ModelInclude[M["name"]] | null;
  };
};

type ModelWhereInput = {
  [M in DMMFModel as M["name"]]: {
    [F in DMMFGetScalarFields<M> as F["name"]]?: boolean;
  } & {
    AND?: Enumerable<ModelWhereInput[M["name"]]>;
    OR?: Enumerable<ModelWhereInput[M["name"]]>;
    NOT?: Enumerable<ModelWhereInput[M["name"]]>;
  };
};

export type EnumName = keyof Enum;

export declare const ModelName: { [K in ModelName]: K };
export type ModelName = keyof Model;

export type Company = Model["Company"];
export type User = Model["User"];
export type Profile = Model["Profile"];
export type Team = Model["Team"];
export type Ownership = Model["Ownership"];
export type Project = Model["Project"];
export type Task = Model["Task"];
export type Attribute = Model["Attribute"];

export declare const TaskStatus: { [K in TaskStatus]: K };
export type TaskStatus = Enum["TaskStatus"];

export type DMMFEnum = DMMF["datamodel"]["enums"][number];
export type DMMFModel = DMMF["datamodel"]["models"][number];
export type DMMFModelField = DMMFModel["fields"][number];
export type DMMFModelScalarField = Extract<DMMFModelField, { kind: "scalar" }>;

export type DMMFGetScalarFields<M extends DMMFModel> = Extract<
  M["fields"][number],
  { kind: "scalar" }
>;

export type DMMFGetObjectFields<M extends DMMFModel> = Extract<
  M["fields"][number],
  { kind: "object" }
>;

export type DMMFGetScalarFieldType<F extends DMMFModelScalarField> =
  F["isList"] extends true
    ? ScalarType[F["type"]][]
    : F["isRequired"] extends true
    ? ScalarType[F["type"]]
    : ScalarType[F["type"]] | null;

type DMMF = {
  datamodel: {
    enums: [
      {
        name: "TaskStatus";
        values: [
          {
            name: "Pending";
            dbName: null;
          },
          {
            name: "InProgress";
            dbName: null;
          },
          {
            name: "Complete";
            dbName: null;
          },
          {
            name: "WontDo";
            dbName: null;
          }
        ];
        dbName: null;
      }
    ];
    models: [
      {
        name: "Company";
        dbName: null;
        fields: [
          {
            name: "id";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: true;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "name";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "users";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "User";
            relationName: "CompanyToUser";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "projects";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Project";
            relationName: "CompanyToProject";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "tasks";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Task";
            relationName: "CompanyToTask";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "team";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Team";
            relationName: "CompanyToTeam";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "User";
        dbName: null;
        fields: [
          {
            name: "id";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: true;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "companyId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["(current_setting('app.current_company_id'::text))::uuid"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "email";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: true;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "company";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Company";
            relationName: "CompanyToUser";
            relationFromFields: ["companyId"];
            relationToFields: ["id"];
            relationOnDelete: "Cascade";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "profile";
            kind: "object";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Profile";
            relationName: "ProfileToUser";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "ownedProjects";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Project";
            relationName: "ProjectToUser";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "assignedTasks";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Task";
            relationName: "TaskToUser";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "teams";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Team";
            relationName: "TeamToUser";
            relationFromFields: [];
            relationToFields: ["id"];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "ledTeams";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Team";
            relationName: "leader";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "Profile";
        dbName: null;
        fields: [
          {
            name: "user";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "User";
            relationName: "ProfileToUser";
            relationFromFields: ["userId"];
            relationToFields: ["id"];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "userId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: true;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "Team";
        dbName: null;
        fields: [
          {
            name: "id";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: true;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "companyId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["(current_setting('app.current_company_id'::text))::uuid"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "leaderId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "company";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Company";
            relationName: "CompanyToTeam";
            relationFromFields: ["companyId"];
            relationToFields: ["id"];
            relationOnDelete: "Cascade";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "leader";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "User";
            relationName: "leader";
            relationFromFields: ["leaderId"];
            relationToFields: ["id"];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "members";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "User";
            relationName: "TeamToUser";
            relationFromFields: [];
            relationToFields: ["id"];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "projects";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Ownership";
            relationName: "OwnershipToTeam";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "Ownership";
        dbName: null;
        fields: [
          {
            name: "id";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: true;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "teamId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "projectId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "effectiveAt";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "DateTime";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "effectiveUntil";
            kind: "scalar";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "DateTime";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "team";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Team";
            relationName: "OwnershipToTeam";
            relationFromFields: ["teamId"];
            relationToFields: ["id"];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "project";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Project";
            relationName: "OwnershipToProject";
            relationFromFields: ["projectId"];
            relationToFields: ["id"];
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "Project";
        dbName: null;
        fields: [
          {
            name: "id";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: true;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "companyId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["(current_setting('app.current_company_id'::text))::uuid"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "userId";
            kind: "scalar";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "title";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "company";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Company";
            relationName: "CompanyToProject";
            relationFromFields: ["companyId"];
            relationToFields: ["id"];
            relationOnDelete: "Cascade";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "owner";
            kind: "object";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "User";
            relationName: "ProjectToUser";
            relationFromFields: ["userId"];
            relationToFields: ["id"];
            relationOnDelete: "SetNull";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "tasks";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Task";
            relationName: "ProjectToTask";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "teams";
            kind: "object";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Ownership";
            relationName: "OwnershipToProject";
            relationFromFields: [];
            relationToFields: [];
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "Task";
        dbName: null;
        fields: [
          {
            name: "id";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: true;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "companyId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["(current_setting('app.current_company_id'::text))::uuid"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "projectId";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "userId";
            kind: "scalar";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: true;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "title";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "status";
            kind: "enum";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "TaskStatus";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "isComplete";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Boolean";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "size";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Int";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "bigSize";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "BigInt";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "company";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Company";
            relationName: "CompanyToTask";
            relationFromFields: ["companyId"];
            relationToFields: ["id"];
            relationOnDelete: "Cascade";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "project";
            kind: "object";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "Project";
            relationName: "ProjectToTask";
            relationFromFields: ["projectId"];
            relationToFields: ["id"];
            relationOnDelete: "Cascade";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "assignee";
            kind: "object";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "User";
            relationName: "TaskToUser";
            relationFromFields: ["userId"];
            relationToFields: ["id"];
            relationOnDelete: "SetNull";
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: null;
        uniqueFields: [];
        uniqueIndexes: [];
        isGenerated: false;
      },
      {
        name: "Attribute";
        dbName: null;
        fields: [
          {
            name: "serial";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "Int";
            default: {
              name: "autoincrement";
              args: [];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "uuid";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: {
              name: "dbgenerated";
              args: ["gen_random_uuid()"];
            };
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "createdAt";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "DateTime";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "stringValue";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: true;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "stringOptional";
            kind: "scalar";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "stringList";
            kind: "scalar";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: false;
            type: "String";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "stringDefault";
            kind: "scalar";
            isList: false;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: "foo";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "stringOptionalDefault";
            kind: "scalar";
            isList: false;
            isRequired: false;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: "foo";
            isGenerated: false;
            isUpdatedAt: false;
          },
          {
            name: "stringListDefault";
            kind: "scalar";
            isList: true;
            isRequired: true;
            isUnique: false;
            isId: false;
            isReadOnly: false;
            hasDefaultValue: true;
            type: "String";
            default: ["foo", "bar"];
            isGenerated: false;
            isUpdatedAt: false;
          }
        ];
        primaryKey: {
          name: null;
          fields: ["serial", "uuid"];
        };
        uniqueFields: [["serial", "createdAt"]];
        uniqueIndexes: [
          {
            name: null;
            fields: ["serial", "createdAt"];
          }
        ];
        isGenerated: false;
      }
    ];
    types: [];
  };
  schema: {
    inputObjectTypes: {
      prisma: [
        {
          name: "CompanyWhereInput";
          meta: {
            source: "Company";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["id"];
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyScalarWhereWithAggregatesInput";
          meta: {
            source: "Company";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserWhereInput";
          meta: {
            source: "User";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "ProfileRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["id", "email"];
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "ProfileRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserScalarWhereWithAggregatesInput";
          meta: {
            source: "User";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileWhereInput";
          meta: {
            source: "Profile";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "user";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "user";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["userId"];
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "user";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileScalarWhereWithAggregatesInput";
          meta: {
            source: "Profile";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamWhereInput";
          meta: {
            source: "Team";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["id"];
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamScalarWhereWithAggregatesInput";
          meta: {
            source: "Team";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipWhereInput";
          meta: {
            source: "Ownership";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["id"];
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipScalarWhereWithAggregatesInput";
          meta: {
            source: "Ownership";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTimeNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectWhereInput";
          meta: {
            source: "Project";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipOrderByRelationAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["id"];
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipListRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectScalarWhereWithAggregatesInput";
          meta: {
            source: "Project";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskWhereInput";
          meta: {
            source: "Task";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "EnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserOrderByWithRelationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["id"];
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "EnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UserRelationFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_avg";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskAvgOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_sum";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskSumOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskScalarWhereWithAggregatesInput";
          meta: {
            source: "Task";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "EnumTaskStatusWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BoolWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigIntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeWhereInput";
          meta: {
            source: "Attribute";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "StringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringNullableListFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "StringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringNullableListFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeOrderByWithRelationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeWhereUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: 1;
            fields: ["stringValue", "serial_createdAt", "serial_uuid"];
          };
          fields: [
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "serial_createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeSerialCreatedAtCompoundUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "serial_uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeSerialUuidCompoundUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "AttributeWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "StringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringNullableListFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "StringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringNullableListFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeOrderByWithAggregationInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 0;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCountOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_avg";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeAvgOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeMaxOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeMinOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_sum";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeSumOrderByAggregateInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeScalarWhereWithAggregatesInput";
          meta: {
            source: "Attribute";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "AttributeScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "AttributeScalarWhereWithAggregatesInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "StringNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringNullableListFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "StringNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringNullableListFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "user";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "userId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "user";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneRequiredWithoutProfileNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "userId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [];
        },
        {
          name: "ProfileUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneRequiredWithoutLedTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedOneWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedOneWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateOneRequiredWithoutProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateOneRequiredWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutOwnedProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedOneWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateOneRequiredWithoutTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutAssignedTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCreatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCreatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUncheckedCreateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCreatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCreatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUncheckedUpdateInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeCreateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCreatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeCreatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUpdateManyMutationInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUncheckedUpdateManyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "AttributeUpdatestringListDefaultInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "UuidFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "StringFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserListRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "every";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "some";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "none";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectListRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "every";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "some";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "none";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskListRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "every";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "some";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "none";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamListRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "every";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "some";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "none";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserOrderByRelationAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectOrderByRelationAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskOrderByRelationAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamOrderByRelationAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UuidWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "StringWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "is";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isNot";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "is";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "isNot";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "is";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "isNot";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipListRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "every";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "some";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "none";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipOrderByRelationAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "DateTimeFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "DateTimeNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "is";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isNot";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectRelationFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "is";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isNot";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "DateTimeWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "DateTimeNullableWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UuidNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UuidNullableWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "EnumTaskStatusFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "NestedEnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "BoolFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "IntFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "BigIntFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskAvgOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskSumOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "EnumTaskStatusWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "NestedEnumTaskStatusWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedEnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedEnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "BoolWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBoolWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "IntWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedIntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_avg";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedFloatFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_sum";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "BigIntWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBigIntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_avg";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedFloatFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_sum";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "StringNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "StringNullableListFilter";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "has";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "hasEvery";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "hasSome";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "isEmpty";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeSerialCreatedAtCompoundUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeSerialUuidCompoundUniqueInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "serial";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeCountOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringList";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringListDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeAvgOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeMaxOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeMinOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "uuid";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "createdAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringValue";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptional";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "stringOptionalDefault";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeSumOrderByAggregateInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "serial";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "SortOrder";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "StringNullableWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "mode";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "QueryMode";
                  namespace: "prisma";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateNestedManyWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "StringFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyWithoutCompanyNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpsertWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyCompanyInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithWhereUniqueWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateManyWithWhereWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateNestedOneWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileCreateNestedOneWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateOrConnectWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateNestedManyWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyOwnerInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateNestedManyWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyAssigneeInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateNestedManyWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateNestedManyWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyLeaderInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUncheckedCreateNestedOneWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateOrConnectWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyOwnerInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyAssigneeInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateNestedManyWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyLeaderInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpsertWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateToOneWithWhereWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUpdateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUpdateOneWithoutUserNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateOrConnectWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateToOneWithWhereWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUpdateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedUpdateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateManyWithoutOwnerNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyOwnerInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithWhereWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateManyWithWhereWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyWithoutAssigneeNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpsertWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpsertWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyAssigneeInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithWhereWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateManyWithWhereWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyWithoutMembersNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpsertWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithWhereWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateManyWithWhereWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyWithoutLeaderNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpsertWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyLeaderInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithWhereWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateManyWithWhereWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateOrConnectWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateToOneWithWhereWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUpdateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedUpdateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectCreateOrConnectWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpsertWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyOwnerInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateWithWhereUniqueWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithWhereWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateManyWithWhereWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpsertWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpsertWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyAssigneeInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateWithWhereUniqueWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithWhereWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateManyWithWhereWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpsertWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithWhereUniqueWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithWhereWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateManyWithWhereWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamCreateOrConnectWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpsertWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyLeaderInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithWhereUniqueWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithWhereWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateManyWithWhereWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateNestedOneWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateOneRequiredWithoutProfileNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateToOneWithWhereWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateNestedOneWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateNestedOneWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateNestedManyWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateNestedManyWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyTeamInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateNestedManyWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedCreateNestedManyWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyTeamInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateOneRequiredWithoutTeamNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpsertWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateToOneWithWhereWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateOneRequiredWithoutLedTeamsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateToOneWithWhereWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateManyWithoutTeamsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpsertWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithWhereWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateManyWithWhereWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateManyWithoutTeamNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyTeamInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithWhereWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateManyWithWhereWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateManyWithoutTeamsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpsertWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithWhereUniqueWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithWhereWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateManyWithWhereWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateManyWithoutTeamNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyTeamInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithWhereWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateManyWithWhereWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateNestedOneWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateNestedOneWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "DateTimeFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NullableDateTimeFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateOneRequiredWithoutProjectsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateOrConnectWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpsertWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateToOneWithWhereWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateOneRequiredWithoutTeamsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpsertWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateToOneWithWhereWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateNestedOneWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateNestedOneWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateNestedManyWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateNestedManyWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateNestedManyWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedCreateNestedManyWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateOneRequiredWithoutProjectsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpsertWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateToOneWithWhereWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateOneWithoutOwnedProjectsNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateToOneWithWhereWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyWithoutProjectNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateManyWithoutProjectNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "NullableStringFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateManyWithoutProjectNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateManyWithoutProjectNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipCreateOrConnectWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpsertWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "createMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyProjectInputEnvelope";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateWithWhereUniqueWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "updateMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUpdateManyWithWhereWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "deleteMany";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateNestedOneWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateNestedOneWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateNestedOneWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "EnumTaskStatusFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "BoolFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "IntFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "increment";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "decrement";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "multiply";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "divide";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "BigIntFieldUpdateOperationsInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "increment";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "decrement";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "multiply";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "divide";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateOneRequiredWithoutTasksNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateOrConnectWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpsertWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateToOneWithWhereWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateOneRequiredWithoutTasksNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateOrConnectWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpsertWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateToOneWithWhereWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateOneWithoutAssignedTasksNestedInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "create";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connectOrCreate";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateOrConnectWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "upsert";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpsertWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "disconnect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "delete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "connect";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateToOneWithWhereWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUpdateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeCreatestringListInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeCreatestringListDefaultInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUpdatestringListInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "push";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "AttributeUpdatestringListDefaultInput";
          constraints: {
            maxNumFields: 1;
            minNumFields: 1;
          };
          fields: [
            {
              name: "set";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "push";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            }
          ];
        },
        {
          name: "NestedUuidFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedStringFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedUuidWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedIntFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedStringWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedDateTimeFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedDateTimeNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedDateTimeWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedDateTimeNullableWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedDateTimeNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedDateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedIntNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedUuidNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedUuidNullableWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedUuidNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedStringNullableFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedEnumTaskStatusFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "NestedEnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedBoolFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedBigIntFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedEnumTaskStatusWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "NestedEnumTaskStatusWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedEnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedEnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedBoolWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBoolWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedIntWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedIntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_avg";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedFloatFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_sum";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedFloatFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Float";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedFloatFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedBigIntWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: true;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedBigIntWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_avg";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedFloatFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_sum";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedBigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "NestedStringNullableWithAggregatesFilter";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "equals";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "in";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "notIn";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: true;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "lte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "gte";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "contains";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "startsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "endsWith";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "not";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NestedStringNullableWithAggregatesFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "_count";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedIntNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_min";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "_max";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "NestedStringNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateOrConnectWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateManyCompanyInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateManyCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateOrConnectWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateManyCompanyInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedOneWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateOrConnectWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyCompanyInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateOrConnectWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateManyCompanyInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpsertWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateManyWithWhereWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateManyWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserScalarWhereInput";
          meta: {
            source: "User";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpsertWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateManyWithWhereWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateManyWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectScalarWhereInput";
          meta: {
            source: "Project";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpsertWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyWithWhereWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateManyWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskScalarWhereInput";
          meta: {
            source: "Task";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "UuidNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "StringFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "EnumTaskStatusFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BoolFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "IntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigIntFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpsertWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithWhereUniqueWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyWithWhereWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamScalarWhereInput";
          meta: {
            source: "Team";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedCreateWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateOrConnectWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileCreateWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [];
        },
        {
          name: "ProfileUncheckedCreateWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [];
        },
        {
          name: "ProfileCreateOrConnectWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedCreateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateOrConnectWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateManyOwnerInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateManyOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedOneWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateOrConnectWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyAssigneeInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateOrConnectWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateOrConnectWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateManyLeaderInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateManyLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpsertWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateToOneWithWhereWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedUpdateWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUpdateToOneWithWhereWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProfileUncheckedUpdateWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProfileUpdateWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [];
        },
        {
          name: "ProfileUncheckedUpdateWithoutUserInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [];
        },
        {
          name: "ProjectUpsertWithWhereUniqueWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateWithWhereUniqueWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateManyWithWhereWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpsertWithWhereUniqueWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateWithWhereUniqueWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyWithWhereWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateManyWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpsertWithWhereUniqueWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithWhereUniqueWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyWithWhereWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpsertWithWhereUniqueWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithWhereUniqueWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateManyWithWhereWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateManyWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateOrConnectWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpsertWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateToOneWithWhereWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutProfileInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateWithoutProfileInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedCreateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateOrConnectWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateOrConnectWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateOrConnectWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedOneWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedCreateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateOrConnectWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateManyTeamInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpsertWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateToOneWithWhereWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedUpdateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpsertWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateToOneWithWhereWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpsertWithWhereUniqueWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithWhereUniqueWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateManyWithWhereWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpsertWithWhereUniqueWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateWithWhereUniqueWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedUpdateWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateManyWithWhereWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedUpdateManyWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipScalarWhereInput";
          meta: {
            source: "Ownership";
          };
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "AND";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "OR";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "NOT";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UuidFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTimeFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTimeNullableFilter";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTeamInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutLedTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedCreateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateOrConnectWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateOrConnectWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpsertWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateToOneWithWhereWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TeamUncheckedUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneRequiredWithoutLedTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpsertWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateToOneWithWhereWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutOwnedProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedCreateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateOrConnectWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedCreateNestedManyWithoutAssigneeInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateOrConnectWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedCreateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateOrConnectWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyProjectInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateManyProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedOneWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedCreateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateOrConnectWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateManyProjectInputEnvelope";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateManyProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: true;
                }
              ];
            },
            {
              name: "skipDuplicates";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpsertWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateToOneWithWhereWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedUpdateWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpsertWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateToOneWithWhereWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpsertWithWhereUniqueWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateWithWhereUniqueWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateManyWithWhereWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "TaskUncheckedUpdateManyWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpsertWithWhereUniqueWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedCreateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateWithWhereUniqueWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedUpdateWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateManyWithWhereWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipScalarWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyMutationInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "OwnershipUncheckedUpdateManyWithoutTeamsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedCreateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutCompanyInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyCreateOrConnectWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateNestedOneWithoutOwnedProjectsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedCreateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedCreateNestedManyWithoutProjectInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateOrConnectWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateNestedOneWithoutUsersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedCreateWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedCreateNestedOneWithoutUserInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedCreateNestedManyWithoutOwnerInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutMembersInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedCreateNestedManyWithoutLeaderInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateOrConnectWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereUniqueInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpsertWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateToOneWithWhereWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "CompanyUncheckedUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUpdateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "CompanyUncheckedUpdateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "name";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "users";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutCompanyNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpsertWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedCreateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateToOneWithWhereWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "ProjectUncheckedUpdateWithoutTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutOwnedProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpsertWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "update";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "create";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedCreateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateToOneWithWhereWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "where";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserWhereInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "data";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "UserUncheckedUpdateWithoutAssignedTasksInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserCreateManyCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateManyCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateManyCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutMembersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateManyWithoutUsersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "owner";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutOwnedProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateManyWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateOneRequiredWithoutTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutAssignedTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateManyWithoutTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneRequiredWithoutLedTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateWithoutCompanyInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectCreateManyOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamCreateManyLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUpdateWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateWithoutOwnerInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "tasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutProjectNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "ProjectUncheckedUpdateManyWithoutOwnedProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateOneRequiredWithoutTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateWithoutAssigneeInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateManyWithoutAssignedTasksInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leader";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneRequiredWithoutLedTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "leaderId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUpdateWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateWithoutLeaderInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "members";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUncheckedUpdateManyWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "OwnershipUncheckedUpdateManyWithoutTeamNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TeamUncheckedUpdateManyWithoutLedTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateManyTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUpdateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutUsersNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "profile";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProfileUncheckedUpdateOneWithoutUserNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ownedProjects";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUncheckedUpdateManyWithoutOwnerNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignedTasks";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskUncheckedUpdateManyWithoutAssigneeNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "ledTeams";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUncheckedUpdateManyWithoutLeaderNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "UserUncheckedUpdateManyWithoutMembersInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "email";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "project";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "ProjectUpdateOneRequiredWithoutTeamsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateWithoutTeamInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateManyWithoutProjectsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "projectId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskCreateManyProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipCreateManyProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: true;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUpdateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "company";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "CompanyUpdateOneRequiredWithoutTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "assignee";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "UserUpdateOneWithoutAssignedTasksNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "TaskUncheckedUpdateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "companyId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "userId";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableStringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "title";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "status";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TaskStatus";
                  namespace: "model";
                  location: "enumTypes";
                  isList: false;
                },
                {
                  type: "EnumTaskStatusFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "isComplete";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Boolean";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BoolFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "size";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "Int";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "IntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "bigSize";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "BigInt";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "BigIntFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUpdateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            },
            {
              name: "team";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "TeamUpdateOneRequiredWithoutProjectsNestedInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateWithoutProjectInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        },
        {
          name: "OwnershipUncheckedUpdateManyWithoutTeamsInput";
          constraints: {
            maxNumFields: null;
            minNumFields: null;
          };
          fields: [
            {
              name: "id";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "teamId";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "String";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "StringFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveAt";
              isRequired: false;
              isNullable: false;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "DateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                }
              ];
            },
            {
              name: "effectiveUntil";
              isRequired: false;
              isNullable: true;
              inputTypes: [
                {
                  type: "DateTime";
                  location: "scalar";
                  isList: false;
                },
                {
                  type: "NullableDateTimeFieldUpdateOperationsInput";
                  namespace: "prisma";
                  location: "inputObjectTypes";
                  isList: false;
                },
                {
                  type: "Null";
                  location: "scalar";
                  isList: false;
                }
              ];
            }
          ];
        }
      ];
    };
    outputObjectTypes: {
      prisma: [
        {
          name: "Query";
          fields: [
            {
              name: "findFirstCompany";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstCompanyOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyCompany";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateCompany";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "CompanyOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateCompany";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByCompany";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "CompanyOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "CompanyScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "CompanyGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueCompany";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueCompanyOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstUser";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstUserOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyUser";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateUser";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateUser";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByUser";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "UserGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueUser";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueUserOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstProfile";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstProfileOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyProfile";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateProfile";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProfileOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateProfile";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByProfile";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProfileOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "ProfileScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "ProfileGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueProfile";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueProfileOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstTeam";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstTeamOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyTeam";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateTeam";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateTeam";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByTeam";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "TeamGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueTeam";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueTeamOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstOwnership";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstOwnershipOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyOwnership";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateOwnership";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateOwnership";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByOwnership";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "OwnershipGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueOwnership";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueOwnershipOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstProject";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstProjectOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyProject";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateProject";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateProject";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByProject";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "ProjectGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueProject";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueProjectOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstTask";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstTaskOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyTask";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateTask";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateTask";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByTask";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "TaskGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueTask";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueTaskOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstAttribute";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findFirstAttributeOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findManyAttribute";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "aggregateAttribute";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "AttributeOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AggregateAttribute";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "groupByAttribute";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "AttributeOrderByWithAggregationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "by";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    },
                    {
                      type: "AttributeScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "having";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeScalarWhereWithAggregatesInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AttributeGroupByOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "findUniqueAttribute";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "findUniqueAttributeOrThrow";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Mutation";
          fields: [
            {
              name: "createOneCompany";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "CompanyUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneCompany";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "CompanyUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "CompanyUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyCompany";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneCompany";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneCompany";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "CompanyUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyCompany";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "CompanyUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyCompany";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "CompanyWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneUser";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "UserUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneUser";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "UserUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "UserUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyUser";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneUser";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneUser";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "UserUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyUser";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "UserUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyUser";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneProfile";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProfileUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneProfile";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProfileUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProfileUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyProfile";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneProfile";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneProfile";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProfileUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyProfile";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProfileUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyProfile";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProfileWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneTeam";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TeamUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneTeam";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TeamUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TeamUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyTeam";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneTeam";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneTeam";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TeamUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyTeam";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TeamUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyTeam";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneOwnership";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "OwnershipUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneOwnership";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "OwnershipUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "OwnershipUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyOwnership";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneOwnership";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneOwnership";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "OwnershipUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyOwnership";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "OwnershipUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyOwnership";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneProject";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProjectUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneProject";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProjectUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProjectUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyProject";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneProject";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneProject";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProjectUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyProject";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "ProjectUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyProject";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneTask";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TaskUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneTask";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TaskUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TaskUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyTask";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneTask";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneTask";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TaskUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyTask";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "TaskUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyTask";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createOneAttribute";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "AttributeUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "upsertOneAttribute";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "create";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "AttributeUncheckedCreateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "update";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "AttributeUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "createManyAttribute";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeCreateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    }
                  ];
                },
                {
                  name: "skipDuplicates";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Boolean";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteOneAttribute";
              args: [
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateOneAttribute";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "AttributeUncheckedUpdateInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Attribute";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "updateManyAttribute";
              args: [
                {
                  name: "data";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeUpdateManyMutationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    },
                    {
                      type: "AttributeUncheckedUpdateManyInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "deleteManyAttribute";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "AttributeWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "AffectedRowsOutput";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "executeRaw";
              args: [
                {
                  name: "query";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "String";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "parameters";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Json";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Json";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "queryRaw";
              args: [
                {
                  name: "query";
                  isRequired: true;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "String";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "parameters";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Json";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                }
              ];
              isNullable: false;
              outputType: {
                type: "Json";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateCompany";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "CompanyCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "CompanyMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "CompanyMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "CompanyGroupByOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "name";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "CompanyCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "CompanyMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "CompanyMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateUser";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "UserCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "UserMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "UserMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "UserGroupByOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "email";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "UserCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "UserMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "UserMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateProfile";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProfileCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProfileMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProfileMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProfileGroupByOutputType";
          fields: [
            {
              name: "userId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProfileCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProfileMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProfileMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateTeam";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "TeamCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "TeamMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "TeamMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TeamGroupByOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "leaderId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "TeamCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "TeamMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "TeamMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateOwnership";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "OwnershipCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "OwnershipMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "OwnershipMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "OwnershipGroupByOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teamId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveAt";
              args: [];
              isNullable: false;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveUntil";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "OwnershipCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "OwnershipMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "OwnershipMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateProject";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProjectCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProjectMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProjectMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProjectGroupByOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProjectCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProjectMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "ProjectMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateTask";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_avg";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskAvgAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_sum";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskSumAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TaskGroupByOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "status";
              args: [];
              isNullable: false;
              outputType: {
                type: "TaskStatus";
                namespace: "model";
                location: "enumTypes";
                isList: false;
              };
            },
            {
              name: "isComplete";
              args: [];
              isNullable: false;
              outputType: {
                type: "Boolean";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "size";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: false;
              outputType: {
                type: "BigInt";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_avg";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskAvgAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_sum";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskSumAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AggregateAttribute";
          fields: [
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_avg";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeAvgAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_sum";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeSumAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AttributeGroupByOutputType";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "uuid";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "createdAt";
              args: [];
              isNullable: false;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringValue";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptional";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringList";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: true;
              };
            },
            {
              name: "stringDefault";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptionalDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringListDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: true;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeCountAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_avg";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeAvgAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_sum";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeSumAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_min";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeMinAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "_max";
              args: [];
              isNullable: true;
              outputType: {
                type: "AttributeMaxAggregateOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AffectedRowsOutput";
          fields: [
            {
              name: "count";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "CompanyCountOutputType";
          fields: [
            {
              name: "users";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projects";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "tasks";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "team";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "CompanyCountAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "name";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "CompanyMinAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "name";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "CompanyMaxAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "name";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "UserCountOutputType";
          fields: [
            {
              name: "ownedProjects";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "assignedTasks";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teams";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "ledTeams";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "UserCountAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "email";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "UserMinAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "email";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "UserMaxAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "email";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProfileCountAggregateOutputType";
          fields: [
            {
              name: "userId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProfileMinAggregateOutputType";
          fields: [
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProfileMaxAggregateOutputType";
          fields: [
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TeamCountOutputType";
          fields: [
            {
              name: "members";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projects";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TeamCountAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "leaderId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TeamMinAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "leaderId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TeamMaxAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "leaderId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "OwnershipCountAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teamId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveAt";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveUntil";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "OwnershipMinAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teamId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveAt";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveUntil";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "OwnershipMaxAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teamId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveAt";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveUntil";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProjectCountOutputType";
          fields: [
            {
              name: "tasks";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teams";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProjectCountAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProjectMinAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "ProjectMaxAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TaskCountAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "status";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "isComplete";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "size";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TaskAvgAggregateOutputType";
          fields: [
            {
              name: "size";
              args: [];
              isNullable: true;
              outputType: {
                type: "Float";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: true;
              outputType: {
                type: "Float";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TaskSumAggregateOutputType";
          fields: [
            {
              name: "size";
              args: [];
              isNullable: true;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: true;
              outputType: {
                type: "BigInt";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TaskMinAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "status";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskStatus";
                namespace: "model";
                location: "enumTypes";
                isList: false;
              };
            },
            {
              name: "isComplete";
              args: [];
              isNullable: true;
              outputType: {
                type: "Boolean";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "size";
              args: [];
              isNullable: true;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: true;
              outputType: {
                type: "BigInt";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "TaskMaxAggregateOutputType";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "status";
              args: [];
              isNullable: true;
              outputType: {
                type: "TaskStatus";
                namespace: "model";
                location: "enumTypes";
                isList: false;
              };
            },
            {
              name: "isComplete";
              args: [];
              isNullable: true;
              outputType: {
                type: "Boolean";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "size";
              args: [];
              isNullable: true;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: true;
              outputType: {
                type: "BigInt";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AttributeCountAggregateOutputType";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "uuid";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "createdAt";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringValue";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptional";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringList";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringDefault";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptionalDefault";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringListDefault";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "_all";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AttributeAvgAggregateOutputType";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: true;
              outputType: {
                type: "Float";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AttributeSumAggregateOutputType";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: true;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AttributeMinAggregateOutputType";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: true;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "uuid";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "createdAt";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringValue";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptional";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptionalDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "AttributeMaxAggregateOutputType";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: true;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "uuid";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "createdAt";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringValue";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptional";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptionalDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        }
      ];
      model: [
        {
          name: "Company";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "name";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "users";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "projects";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "tasks";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "team";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: false;
              outputType: {
                type: "CompanyCountOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "User";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "email";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "company";
              args: [];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "profile";
              args: [];
              isNullable: true;
              outputType: {
                type: "Profile";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "ownedProjects";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "ProjectOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "ProjectScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "assignedTasks";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "teams";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "ledTeams";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TeamOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TeamScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: false;
              outputType: {
                type: "UserCountOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Profile";
          fields: [
            {
              name: "user";
              args: [];
              isNullable: false;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Team";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "leaderId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "company";
              args: [];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "leader";
              args: [];
              isNullable: false;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "members";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "UserOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "UserScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "projects";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: false;
              outputType: {
                type: "TeamCountOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Ownership";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "teamId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveAt";
              args: [];
              isNullable: false;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "effectiveUntil";
              args: [];
              isNullable: true;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "team";
              args: [];
              isNullable: false;
              outputType: {
                type: "Team";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "project";
              args: [];
              isNullable: false;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Project";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "company";
              args: [];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "owner";
              args: [];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "tasks";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "TaskOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "TaskScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Task";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "teams";
              args: [
                {
                  name: "where";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "orderBy";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: true;
                    },
                    {
                      type: "OwnershipOrderByWithRelationInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "cursor";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipWhereUniqueInput";
                      namespace: "prisma";
                      location: "inputObjectTypes";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "take";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "skip";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "Int";
                      location: "scalar";
                      isList: false;
                    }
                  ];
                },
                {
                  name: "distinct";
                  isRequired: false;
                  isNullable: false;
                  inputTypes: [
                    {
                      type: "OwnershipScalarFieldEnum";
                      namespace: "prisma";
                      location: "enumTypes";
                      isList: true;
                    }
                  ];
                }
              ];
              isNullable: true;
              outputType: {
                type: "Ownership";
                namespace: "model";
                location: "outputObjectTypes";
                isList: true;
              };
            },
            {
              name: "_count";
              args: [];
              isNullable: false;
              outputType: {
                type: "ProjectCountOutputType";
                namespace: "prisma";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Task";
          fields: [
            {
              name: "id";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "companyId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "projectId";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "userId";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "title";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "status";
              args: [];
              isNullable: false;
              outputType: {
                type: "TaskStatus";
                namespace: "model";
                location: "enumTypes";
                isList: false;
              };
            },
            {
              name: "isComplete";
              args: [];
              isNullable: false;
              outputType: {
                type: "Boolean";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "size";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "bigSize";
              args: [];
              isNullable: false;
              outputType: {
                type: "BigInt";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "company";
              args: [];
              isNullable: false;
              outputType: {
                type: "Company";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "project";
              args: [];
              isNullable: false;
              outputType: {
                type: "Project";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            },
            {
              name: "assignee";
              args: [];
              isNullable: true;
              outputType: {
                type: "User";
                namespace: "model";
                location: "outputObjectTypes";
                isList: false;
              };
            }
          ];
        },
        {
          name: "Attribute";
          fields: [
            {
              name: "serial";
              args: [];
              isNullable: false;
              outputType: {
                type: "Int";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "uuid";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "createdAt";
              args: [];
              isNullable: false;
              outputType: {
                type: "DateTime";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringValue";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptional";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringList";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: true;
              };
            },
            {
              name: "stringDefault";
              args: [];
              isNullable: false;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringOptionalDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: false;
              };
            },
            {
              name: "stringListDefault";
              args: [];
              isNullable: true;
              outputType: {
                type: "String";
                location: "scalar";
                isList: true;
              };
            }
          ];
        }
      ];
    };
    enumTypes: {
      prisma: [
        {
          name: "AttributeScalarFieldEnum";
          values: [
            "serial",
            "uuid",
            "createdAt",
            "stringValue",
            "stringOptional",
            "stringList",
            "stringDefault",
            "stringOptionalDefault",
            "stringListDefault"
          ];
        },
        {
          name: "CompanyScalarFieldEnum";
          values: ["id", "name"];
        },
        {
          name: "OwnershipScalarFieldEnum";
          values: [
            "id",
            "teamId",
            "projectId",
            "effectiveAt",
            "effectiveUntil"
          ];
        },
        {
          name: "ProfileScalarFieldEnum";
          values: ["userId"];
        },
        {
          name: "ProjectScalarFieldEnum";
          values: ["id", "companyId", "userId", "title"];
        },
        {
          name: "QueryMode";
          values: ["default", "insensitive"];
        },
        {
          name: "SortOrder";
          values: ["asc", "desc"];
        },
        {
          name: "TaskScalarFieldEnum";
          values: [
            "id",
            "companyId",
            "projectId",
            "userId",
            "title",
            "status",
            "isComplete",
            "size",
            "bigSize"
          ];
        },
        {
          name: "TeamScalarFieldEnum";
          values: ["id", "companyId", "leaderId"];
        },
        {
          name: "TransactionIsolationLevel";
          values: [
            "ReadUncommitted",
            "ReadCommitted",
            "RepeatableRead",
            "Serializable"
          ];
        },
        {
          name: "UserScalarFieldEnum";
          values: ["id", "companyId", "email"];
        }
      ];
      model: [
        {
          name: "TaskStatus";
          values: ["Pending", "InProgress", "Complete", "WontDo"];
        }
      ];
    };
    fieldRefTypes: {};
  };
  mappings: {
    modelOperations: [
      {
        model: "Company";
        aggregate: "aggregateCompany";
        createMany: "createManyCompany";
        createOne: "createOneCompany";
        deleteMany: "deleteManyCompany";
        deleteOne: "deleteOneCompany";
        findFirst: "findFirstCompany";
        findFirstOrThrow: "findFirstCompanyOrThrow";
        findMany: "findManyCompany";
        findUnique: "findUniqueCompany";
        findUniqueOrThrow: "findUniqueCompanyOrThrow";
        groupBy: "groupByCompany";
        updateMany: "updateManyCompany";
        updateOne: "updateOneCompany";
        upsertOne: "upsertOneCompany";
      },
      {
        model: "User";
        aggregate: "aggregateUser";
        createMany: "createManyUser";
        createOne: "createOneUser";
        deleteMany: "deleteManyUser";
        deleteOne: "deleteOneUser";
        findFirst: "findFirstUser";
        findFirstOrThrow: "findFirstUserOrThrow";
        findMany: "findManyUser";
        findUnique: "findUniqueUser";
        findUniqueOrThrow: "findUniqueUserOrThrow";
        groupBy: "groupByUser";
        updateMany: "updateManyUser";
        updateOne: "updateOneUser";
        upsertOne: "upsertOneUser";
      },
      {
        model: "Profile";
        aggregate: "aggregateProfile";
        createMany: "createManyProfile";
        createOne: "createOneProfile";
        deleteMany: "deleteManyProfile";
        deleteOne: "deleteOneProfile";
        findFirst: "findFirstProfile";
        findFirstOrThrow: "findFirstProfileOrThrow";
        findMany: "findManyProfile";
        findUnique: "findUniqueProfile";
        findUniqueOrThrow: "findUniqueProfileOrThrow";
        groupBy: "groupByProfile";
        updateMany: "updateManyProfile";
        updateOne: "updateOneProfile";
        upsertOne: "upsertOneProfile";
      },
      {
        model: "Team";
        aggregate: "aggregateTeam";
        createMany: "createManyTeam";
        createOne: "createOneTeam";
        deleteMany: "deleteManyTeam";
        deleteOne: "deleteOneTeam";
        findFirst: "findFirstTeam";
        findFirstOrThrow: "findFirstTeamOrThrow";
        findMany: "findManyTeam";
        findUnique: "findUniqueTeam";
        findUniqueOrThrow: "findUniqueTeamOrThrow";
        groupBy: "groupByTeam";
        updateMany: "updateManyTeam";
        updateOne: "updateOneTeam";
        upsertOne: "upsertOneTeam";
      },
      {
        model: "Ownership";
        aggregate: "aggregateOwnership";
        createMany: "createManyOwnership";
        createOne: "createOneOwnership";
        deleteMany: "deleteManyOwnership";
        deleteOne: "deleteOneOwnership";
        findFirst: "findFirstOwnership";
        findFirstOrThrow: "findFirstOwnershipOrThrow";
        findMany: "findManyOwnership";
        findUnique: "findUniqueOwnership";
        findUniqueOrThrow: "findUniqueOwnershipOrThrow";
        groupBy: "groupByOwnership";
        updateMany: "updateManyOwnership";
        updateOne: "updateOneOwnership";
        upsertOne: "upsertOneOwnership";
      },
      {
        model: "Project";
        aggregate: "aggregateProject";
        createMany: "createManyProject";
        createOne: "createOneProject";
        deleteMany: "deleteManyProject";
        deleteOne: "deleteOneProject";
        findFirst: "findFirstProject";
        findFirstOrThrow: "findFirstProjectOrThrow";
        findMany: "findManyProject";
        findUnique: "findUniqueProject";
        findUniqueOrThrow: "findUniqueProjectOrThrow";
        groupBy: "groupByProject";
        updateMany: "updateManyProject";
        updateOne: "updateOneProject";
        upsertOne: "upsertOneProject";
      },
      {
        model: "Task";
        aggregate: "aggregateTask";
        createMany: "createManyTask";
        createOne: "createOneTask";
        deleteMany: "deleteManyTask";
        deleteOne: "deleteOneTask";
        findFirst: "findFirstTask";
        findFirstOrThrow: "findFirstTaskOrThrow";
        findMany: "findManyTask";
        findUnique: "findUniqueTask";
        findUniqueOrThrow: "findUniqueTaskOrThrow";
        groupBy: "groupByTask";
        updateMany: "updateManyTask";
        updateOne: "updateOneTask";
        upsertOne: "upsertOneTask";
      },
      {
        model: "Attribute";
        aggregate: "aggregateAttribute";
        createMany: "createManyAttribute";
        createOne: "createOneAttribute";
        deleteMany: "deleteManyAttribute";
        deleteOne: "deleteOneAttribute";
        findFirst: "findFirstAttribute";
        findFirstOrThrow: "findFirstAttributeOrThrow";
        findMany: "findManyAttribute";
        findUnique: "findUniqueAttribute";
        findUniqueOrThrow: "findUniqueAttributeOrThrow";
        groupBy: "groupByAttribute";
        updateMany: "updateManyAttribute";
        updateOne: "updateOneAttribute";
        upsertOne: "upsertOneAttribute";
      }
    ];
    otherOperations: {
      read: [];
      write: ["executeRaw", "queryRaw"];
    };
  };
};
